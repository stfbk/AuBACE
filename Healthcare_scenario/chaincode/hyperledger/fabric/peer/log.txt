[36m2018-11-11 16:31:30.361 UTC [msp] GetLocalMSP -> DEBU 001[0m Returning existing local MSP
[36m2018-11-11 16:31:30.361 UTC [msp] GetDefaultSigningIdentity -> DEBU 002[0m Obtaining default signing identity
2018-11-11 16:31:30.370 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003[0m Using default escc
2018-11-11 16:31:30.370 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004[0m Using default vscc
[36m2018-11-11 16:31:30.370 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 005[0m java chaincode enabled
[36m2018-11-11 16:31:30.373 UTC [msp/identity] Sign -> DEBU 006[0m Sign: plaintext: 0AC6070A6A08031A0C08E2B2A1DF0510...324D53500A04657363630A0476736363 
[36m2018-11-11 16:31:30.373 UTC [msp/identity] Sign -> DEBU 007[0m Sign: digest: 0CC238F0744B6B10648206158BBFFFAFF1EFEE8D7E5D29FA63B780C7138F2A8B 
Error: Error endorsing chaincode: rpc error: code = Unknown desc = error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 "chaincode/input/src/github.com/hyperledger/fabric/common/util/utils.go:28:2: cannot find package "github.com/golang/protobuf/ptypes/timestamp" in any of:
	/opt/go/src/github.com/golang/protobuf/ptypes/timestamp (from $GOROOT)
	/chaincode/input/src/github.com/golang/protobuf/ptypes/timestamp (from $GOPATH)
	/opt/gopath/src/github.com/golang/protobuf/ptypes/timestamp
chaincode/input/src/github.com/hyperledger/fabric/common/util/net.go:12:2: cannot find package "google.golang.org/grpc/peer" in any of:
	/opt/go/src/google.golang.org/grpc/peer (from $GOROOT)
	/chaincode/input/src/google.golang.org/grpc/peer (from $GOPATH)
	/opt/gopath/src/google.golang.org/grpc/peer
"
Usage:
  peer chaincode instantiate [flags]

Flags:
  -C, --channelID string            The channel on which this command should be executed
      --collections-config string   The file containing the configuration for the chaincode's collection
  -c, --ctor string                 Constructor message for the chaincode in JSON format (default "{}")
  -E, --escc string                 The name of the endorsement system chaincode to be used for this chaincode
  -l, --lang string                 Language the chaincode is written in (default "golang")
  -n, --name string                 Name of the chaincode
  -P, --policy string               The endorsement policy associated to this chaincode
  -v, --version string              Version of the chaincode specified in install/instantiate/upgrade commands
  -V, --vscc string                 The name of the verification system chaincode to be used for this chaincode

Global Flags:
      --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
      --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint
      --clientauth                          Use mutual TLS when communicating with the orderer endpoint
      --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint
      --logging-level string                Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string                      Ordering service endpoint
      --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.
      --tls                                 Use TLS when communicating with the orderer endpoint
      --transient string                    Transient map of arguments in JSON encoding

